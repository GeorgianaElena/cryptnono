apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "cryptnono.fullname" . }}
  labels:
    {{- include "cryptnono.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cryptnono.selectorLabels" . | nindent 6 }}

  template:
      metadata:
        annotations:
          checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        labels:
          {{- include "cryptnono.selectorLabels" . | nindent 10 }}
      spec:
        containers:
        - command:
          - /usr/bin/bpftrace
          - --unsafe
          - /programs/monero.bt
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/bash
                - -c
                - kill -SIGINT $(pidof bpftrace) && sleep 30
          name: trace
          resources: {{ .Values.resources | toJson}}
          securityContext:
            privileged: true
          stdin: true
          tty: true
          volumeMounts:
          - mountPath: /programs
            name: program
            readOnly: true
          - mountPath: /sys
            name: sys
            readOnly: true
          - mountPath: /lib/modules
            name: modules-dir
            readOnly: true
          - mountPath: /lib/modules.host
            name: modules-host
            readOnly: true
          - mountPath: /usr/src/
            name: linux-headers-generated
            readOnly: true
        hostPID: true
        initContainers:
        # fetch linux kernel headers, needed for bpftrace to run properly
        # Brings in https://github.com/iovisor/kubectl-trace/pull/184 and
        # https://github.com/iovisor/kubectl-trace/pull/185 so it works on non COS hosts
        - image: yuvipanda/kubectl-trace-init:9af18f1197b1b377be4816c2761049745b64c6b8
          imagePullPolicy: IfNotPresent
          name: kubectl-trace-init
          resources: {{ .Values.resources | toJson }}
          volumeMounts:
          - mountPath: /etc/lsb-release.host
            name: lsb-release
            readOnly: true
          - mountPath: /etc/os-release.host
            name: os-release
            readOnly: true
          - mountPath: /lib/modules
            name: modules-dir
          - mountPath: /lib/modules.host
            name: modules-host
            readOnly: true
          - mountPath: /usr/src/
            name: linux-headers-generated
          - mountPath: /boot.host
            name: boot-host
        {{- with .Values.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.affinity }}
        affinity:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.tolerations }}
        tolerations:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        volumes:
        - configMap:
            defaultMode: 420
            name: {{ include "cryptnono.fullname" . }}
          name: program
        - hostPath:
            path: /usr
            type: ""
          name: usr-host
        - hostPath:
            path: /lib/modules
            type: ""
          name: modules-host
        - hostPath:
            path: /sys
            type: ""
          name: sys
        - hostPath:
            path: /etc/lsb-release
            type: ""
          name: lsb-release
        - hostPath:
            path: /etc/os-release
            type: ""
          name: os-release
        - hostPath:
            path: /var/cache/linux-headers/modules_dir
            type: ""
          name: modules-dir
        - hostPath:
            path: /var/cache/linux-headers/generated
            type: ""
          name: linux-headers-generated
        - hostPath:
            path: /boot
            type: ""
          name: boot-host