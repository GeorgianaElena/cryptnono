/*
 * Copyright 2018- The Pixie Authors.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


// See https://blog.px.dev/detect-monero-miners/ for a description of what
// this program actually does.
#include <asm/fpu/internal.h>
#include <asm/fpu/types.h>
tracepoint:x86_fpu:x86_fpu_regs_deactivated
{
    $f = (struct fpu *)args->fpu;
    $mxcsr = $f->state.xsave.i387.mxcsr;
    $fpcr = ($mxcsr & 0x6000) >> 13;
    if ($fpcr != 0) {
        // Immediately kill the process if we detect what we think is Monero mining
        // FIXME: Ideally, we would kill it after we detect this a few times. I'm not
        // sure how to do that from within bpftrace. Let's watch for false positives.
        signal(9);
        printf("[%s] killed pid:%d command:%s fpcr:%d\n", strftime("%Y-%m-%dT%H:%M:%S%z", nsecs), pid, comm, $fpcr);
    }
}
